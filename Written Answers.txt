1. Name examples of the layered architecture. Do they differ or just extend each other?
2. Is the below layered architecture correct and why? Is it possible from C to use B? from A to use C?
3. Is DDD a type of layered architecture? What is Anemic model? Is it really an antipattern?
4. What are architectural anti-patterns? Discuss at least three, think of any on your current or previous projects.
5. What do Testability, Extensibility and Scalability NFRs mean. How would you ensure you reached them? Does Clean Architecture cover these NFRs?


1 

2 It is not correct Layerd architecture. Layered architecture flows only down so C layer should not be able to call B layer. A can call C if B layer is open. Usually layered arcitechture 
forces movement down the layers but there are exeptions if the layer is opened

3 DDD ( Domain Driven Design) is not inherently layered architecture, but it can be implemented using a layered architecture approach. DDD advocates for Domain (Models) to be at the center of application and layer infrastructure, application and interface layers on top.

4 Architectural anti-patterns are development pit holes that developers might fall into, they hinder application in various ways from making it harder to developt, maintai, scale or test. Some Anti-Patterns are:
"Cover your Assets" when developers or architects avoid making decisions providing too many alternatives and diving too deep into them
"Autogenerated Stovepipe" when existing system is transfered to distributed architecture without making meaningful refactoring and redesign, when implementing distributed computing many problems might arrise


5